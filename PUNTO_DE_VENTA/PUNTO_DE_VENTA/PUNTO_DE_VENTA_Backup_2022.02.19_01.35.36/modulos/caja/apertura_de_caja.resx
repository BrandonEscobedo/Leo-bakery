<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataGridViewImageColumn2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dataGridViewImageColumn2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>